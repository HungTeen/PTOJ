spring:
  profiles:
    active: dev
  redis:
    host: ${ptoj.redis.host}
    port: ${ptoj.redis.port}
    timeout: 60000
    jedis:
      pool:
        min-idle: 10 #连接池中的最小空闲连接
        max-idle: 50 #连接池中的最大空闲连接
        max-active: 200 #连接池最大连接数（使用负值表示没有限制）
        max-wait: -1 #连接池最大阻塞等待时间（使用负值表示没有限制）
    password: ${ptoj.redis.password}
  cloud:
    nacos:
      server-addr: ${ptoj.nacos.host}:${ptoj.nacos.port}
      username: ${ptoj.nacos.username}
      password: ${ptoj.nacos.password}
    gateway:
      routes:
        - id: user
          uri: lb://user-service
          predicates:
            - Path=/admin/account/**,/admin/user/**,/admin/dashboard/**,/user/**,/account/**,/home/**
        - id: problem
          uri: lb://problem-service
          predicates:
            - Path=/admin/problem/**,/admin/tag/**,/problem/**,/tag/**,/language/**
        - id: submit
          uri: lb://submit-service
          predicates:
            - Path=/submit/**
        - id: judge
          uri: lb://judge-service
          predicates:
            - Path=/judge/**
        - id: training
          uri: lb://training-service
          predicates:
            - Path=/admin/training/**,/training/**
security:
  ignore:
    whitelist:
      - /admin/account/login
      - /account/login
      - /account/get-register-code
      - /account/register
      - /account/apply-reset-password
      - /account/reset-password
      - /user/check-username-or-email
      - /problem/get-problem-detail
      - /problem/get-problem-list
      - /problem/get-random-problem
      - /problem/get-problem-code-template
      - /tag/**
      - /language/**
      - /training/get-training-list
      - /training/get-training-category
dubbo:
  application:
    name: dubbo-${spring.application.name}
  protocol:
    name: dubbo
    port: -1
  registry:
    address: nacos://${ptoj.nacos.host}:${ptoj.nacos.port}?username=${ptoj.nacos.username}&password=${ptoj.nacos.password}
logging:
  level:
    love.pangteen: debug
  pattern:
    dateformat: HH:mm:ss:SSS
  file:
    path: "logs/${spring.application.name}"
############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: satoken
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true
  # 打开 RPC 调用鉴权
  check-same-token: true